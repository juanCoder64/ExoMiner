########## Hyperparameter optimization studies ###########

--------------------------------------study_1---------------------------------- 

some of the values in Shallue's best configuration are not inside the configuration range that we tested;
training models using nonweighted cross-entropy;
number of iterations = 16
number of workers = 26
budgets = [16, 32, 64, 128]
number of runs per budget = 32 (approx.)

BOHB parameters ---

top_n_percent=35, num_samples=64, random_fraction=1/3, bandwidth_factor=4, min_bandwidth=1e-2, eta=2

Configuration ---

lr = CSH.UniformFloatHyperparameter('lr', lower=1e-6, upper=1e-1, default_value='1e-2', log=True)

optimizer = CSH.CategoricalHyperparameter('optimizer', ['Adam', 'SGD'])

sgd_momentum = CSH.UniformFloatHyperparameter('sgd_momentum', lower=0.001, upper=0.99, default_value=0.9,
                                              log=True)
batch_size = CSH.UniformIntegerHyperparameter('batch_size', lower=4, upper=9, default_value=6)
dropout_rate = CSH.UniformFloatHyperparameter('dropout_rate', lower=0.001, upper=0.7, default_value=0.2,
                                              log=True)
decay_rate = CSH.UniformFloatHyperparameter('decay_rate', lower=1e-4, upper=1e-1, default_value=1e-2, log=True)

config_space.add_hyperparameters([lr, optimizer, sgd_momentum, batch_size, dropout_rate, decay_rate])

num_glob_conv_blocks = CSH.UniformIntegerHyperparameter('num_glob_conv_blocks', lower=2, upper=5,
                                                        default_value=3)
num_fc_layers = CSH.UniformIntegerHyperparameter('num_fc_layers', lower=0, upper=4, default_value=2)
conv_ls_per_block = CSH.UniformIntegerHyperparameter('conv_ls_per_block', lower=1, upper=3, default_value=1)

init_fc_neurons = CSH.UniformIntegerHyperparameter('init_fc_neurons', lower=64, upper=512, default_value=256)
init_conv_filters = CSH.UniformIntegerHyperparameter('init_conv_filters', lower=2, upper=6, default_value=4)

kernel_size = CSH.UniformIntegerHyperparameter('kernel_size', lower=1, upper=4, default_value=2)
kernel_stride = CSH.UniformIntegerHyperparameter('kernel_stride', lower=1, upper=2, default_value=1)

pool_size_glob = CSH.UniformIntegerHyperparameter('pool_size_glob', lower=2, upper=4, default_value=2)
pool_stride = CSH.UniformIntegerHyperparameter('pool_stride', lower=1, upper=2, default_value=1)

pool_size_loc = CSH.UniformIntegerHyperparameter('pool_size_loc', lower=2, upper=4, default_value=2)
num_loc_conv_blocks = CSH.UniformIntegerHyperparameter('num_loc_conv_blocks', lower=1, upper=3, default_value=2)

--------------------------------------study_2----------------------------------

all values in Shallue's best configuration are inside the configuration range that we tested;
training models using nonweighted cross-entropy;
number of iterations = 18
number of workers = 16
budgets = [8, 16, 32, 64, 128, 256]
number of runs per budget = varies

BOHB parameters ---

top_n_percent=15, num_samples=64, random_fraction=1/3, bandwidth_factor=3, min_bandwidth=1e-3, eta=2

Configuration ---

lr = CSH.UniformFloatHyperparameter('lr', lower=1e-6, upper=1e-1, default_value='1e-2', log=True)

optimizer = CSH.CategoricalHyperparameter('optimizer', ['Adam', 'SGD'])

sgd_momentum = CSH.UniformFloatHyperparameter('sgd_momentum', lower=0.001, upper=0.99, default_value=0.9,
                                              log=True)
batch_size = CSH.CategoricalHyperparameter('batch_size', [4, 8, 16, 32, 64, 128, 256], default_value=32)
dropout_rate = CSH.UniformFloatHyperparameter('dropout_rate', lower=0.001, upper=0.7, log=True)
decay_rate = CSH.UniformFloatHyperparameter('decay_rate', lower=1e-4, upper=1e-1, default_value=1e-2, log=True)

config_space.add_hyperparameters([lr, optimizer, sgd_momentum, batch_size, dropout_rate, decay_rate])

num_glob_conv_blocks = CSH.UniformIntegerHyperparameter('num_glob_conv_blocks', lower=2, upper=5)
num_fc_layers = CSH.UniformIntegerHyperparameter('num_fc_layers', lower=0, upper=4)
conv_ls_per_block = CSH.UniformIntegerHyperparameter('conv_ls_per_block', lower=1, upper=3, default_value=1)

init_fc_neurons = CSH.CategoricalHyperparameter('init_fc_neurons', [32, 64, 128, 256, 512])
init_conv_filters = CSH.UniformIntegerHyperparameter('init_conv_filters', lower=2, upper=6, default_value=4)

kernel_size = CSH.UniformIntegerHyperparameter('kernel_size', lower=1, upper=6)
kernel_stride = CSH.UniformIntegerHyperparameter('kernel_stride', lower=1, upper=2, default_value=1)

pool_size_glob = CSH.UniformIntegerHyperparameter('pool_size_glob', lower=2, upper=8)
pool_stride = CSH.UniformIntegerHyperparameter('pool_stride', lower=1, upper=2, default_value=1)

pool_size_loc = CSH.UniformIntegerHyperparameter('pool_size_loc', lower=2, upper=8)
num_loc_conv_blocks = CSH.UniformIntegerHyperparameter('num_loc_conv_blocks', lower=1, upper=3)


############## Runs ################
run1:
study_1, best_config, models trained using 50 epochs, the same as Shallue's
run_Shallues_bestconfig: 
models trained using Shallue's configuration and parameters described in his paper
run_2:
study_1, best_config, models trained using 64 epochs, since that was the budget where the maximum AUC on the validation set was achieved
run_3: study_2, models trained using 32 epochs, since that was the budget where the maximum AUC on the validation set was achieved (out of the 128 epochs trained); this configuration was not the best, but achieved a significant higher precision than the best config (trained on 256 epochs) with just a slightly decrease in the AUC
more_epochs
