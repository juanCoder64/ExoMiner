ngpus_per_node: 1
rank: null
#experiment: &experiment_name
paths:
  # experiment directory; results are saved here
  experiment_dir: /Users/msaragoc/Library/CloudStorage/OneDrive-NASA/Projects/exoplanet_transit_classification/experiments/results_ensemble/test_hongbo_tessonly_exominer_usinghongbomodels_7-18-2022_1050
  # directory with the trained models to create the ensemble
  models_dir: /Users/msaragoc/Library/CloudStorage/OneDrive-NASA/Projects/exoplanet_transit_classification/interns/hongbo/kepler_to_tess/05_22_combined_pc-nonpc_nodepth_nosecdepth_wks-selfnorm_addprad_adjust-msky-err_reconfigure_model_tess_only/trained_models_05_22_combined_pc-nonpc_nodepth_nosecdepth_wks-selfnorm_addprad_adjust-msky-err_reconfigure_model_tess_only
  # TFRecord dataset directory
  #  tfrec_dir : /data5/tess_project/Data/outputs/preprocessed-data-split-glob-and-loc-cap20-padded_experiment-normalized
  tfrec_dir: /Users/msaragoc/Library/CloudStorage/OneDrive-NASA/Projects/exoplanet_transit_classification/data/tfrecords/hongbo_wei/merged/tfrecords_merged_evaluation_set_05-22-2022_data_TESS_ONLY/tfrecords_merged_evaluation_set_05-22-2022_experiment-normalized
  # HPO run configuration directory; get configurations from an HPO run; set to null to not use any
  hpo_dir: /Users/msaragoc/Library/CloudStorage/OneDrive-NASA/Projects/exoplanet_transit_classification/experiments/hpo_configs/ConfigK
generate_csv_pred: true  # enerates a prediction ranking for each of the specified datasets
data_fields: # scalar data from TFRecords to add to ranking table
  'target_id': 'int_scalar'
  'tce_plnt_num': 'int_scalar'
  #  'oi': 'float_scalar'
  'label': 'string'  # REQUIRED to run script
  #  'TESS Disposition': 'string'
  'tce_period': 'float_scalar'
  'tce_duration': 'float_scalar'
  'tce_time0bk': 'float_scalar'
  'original_label': 'string'
  'transit_depth': 'float_scalar'
#  'tce_max_mult_ev': 'float_scalar'
#  'tce_prad': 'float_scalar'
#  'sigma_oot_odd': 'float_scalar'
#  'sigma_it_odd': 'float_scalar'
#  'sigma_oot_even': 'float_scalar'
#  'sigma_it_even': 'float_scalar'
config: {
  #  branches: [
  #      'global_flux_view_fluxnorm',
  #      'local_flux_view_fluxnorm',
  #    # 'global_centr_fdl_view_norm',
  #    # 'local_centr_fdl_view_norm',
  #      'local_flux_oddeven_views',
  #      'global_centr_view_std_noclip',
  #      'local_centr_view_std_noclip',
  #    # 'local_weak_secondary_view_fluxnorm',
  #    # 'local_weak_secondary_view_selfnorm',
  #      'local_weak_secondary_view_max_flux-wks_norm'
  #  ]
  #  non_lin_fn: prelu
  #  'num_loc_conv_blocks': 2
  #  'num_glob_conv_blocks': 5
  #  'init_fc_neurons': 512
  #  'num_fc_layers': 4
  #  'pool_size_loc': 7
  #  'pool_size_glob': 5
  #  'pool_stride': 2
  #  'conv_ls_per_block': 2
  #  'init_conv_filters': 4
  #  'kernel_size': 5
  #  'kernel_stride': 1
  #  'optimizer': 'Adam'
  #  'lr': 1.0e-5
  #  'batch_size': 64
  #  'dropout_rate': 0.0
  #  'dropout_rate_fc_conv': 0.0
  #  'num_fc_conv_units': 0
  #  weight_initializer: null
  #  force_softmax: false
  #  use_kepler_ce: false
  #  decay_rate: null
  #  batch_norm: false
  #  multi_class: false  # switch to multiclass classification
}

features_set: # each key-value pair is feature_name: {'dim': feature_dim, 'dtype': feature_dtype}
  global_flux_view_fluxnorm: { 'dim': [ 301, 1 ], 'dtype': float }
  local_flux_view_fluxnorm: { 'dim': [ 31, 1 ], 'dtype': float }
  #  transit_depth_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_max_mult_ev_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_max_sngle_ev_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_robstat_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_model_chisq_norm: { 'dim': [ 1, ], 'dtype': float }
  # odd-even flux related features
  local_flux_odd_view_fluxnorm: { 'dim': [ 31, 1 ], 'dtype': float }
  local_flux_even_view_fluxnorm: { 'dim': [ 31, 1 ], 'dtype': float }
  #  tce_bin_oedp_stat_norm: {'dim': [1,], 'dtype': float}
  #  odd_std_oot_bin_norm: {'dim': [1,], 'dtype': float}
  #  even_std_oot_bin_norm: {'dim': [1,], 'dtype': float}
  odd_se_oot_norm: { 'dim': [ 1, ], 'dtype': float }
  even_se_oot_norm: { 'dim': [ 1, ], 'dtype': float }
  # centroid related features
  # global_centr_fdl_view_norm: {'dim': [301, 1], 'dtype': float}
  # local_centr_fdl_view_norm: {'dim': [31, 1], 'dtype': float}
  #  global_centr_view_std_noclip: { 'dim': [ 301, 1 ], 'dtype': float }
  #  local_centr_view_std_noclip: { 'dim': [ 31, 1 ], 'dtype': float }
  global_centr_view_adjscl_std_noclip: { 'dim': [ 301, 1 ], 'dtype': float }
  local_centr_view_adjscl_std_noclip: { 'dim': [ 31, 1 ], 'dtype': float }
  #  tce_fwm_stat_norm: { 'dim': [ 1, ], 'dtype': float }
  #  tce_dikco_msky_norm: { 'dim': [ 1, ], 'dtype': float }
  #  tce_dikco_msky_err_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_dikco_msky_adjscl_norm: { 'dim': [ 1, ], 'dtype': float }
#  tce_dikco_msky_err_adjscl_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_dikco_msky_err_adjscl_shifted_norm: { 'dim': [ 1, ], 'dtype': float }
  #  tce_dicco_msky_norm: { 'dim': [ 1, ], 'dtype': float }
  #  tce_dicco_msky_err_norm: { 'dim': [ 1, ], 'dtype': float }
  #  mag_norm: { 'dim': [ 1, ], 'dtype': float }
  mag_cat: { 'dim': [ 1, ], 'dtype': int }
  #  mag_cat_norm: { 'dim': [ 1, ], 'dtype': float }
  #  ruwe_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_ruwe_norm: { 'dim': [ 1, ], 'dtype': float }
  # secondary related features
  #  local_weak_secondary_view_fluxnorm: {'dim': [31, 1], 'dtype': float}
  local_weak_secondary_view_selfnorm: { 'dim': [ 31, 1 ], 'dtype': float }
  #  local_weak_secondary_view_max_flux-wks_norm: { 'dim': [ 31, 1 ], 'dtype': float }
  tce_maxmes_norm: { 'dim': [ 1, ], 'dtype': float }
  #  wst_depth_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_albedo_stat_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_ptemp_stat_norm: { 'dim': [ 1, ], 'dtype': float }
  # other diagnostic parameters
  boot_fap_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_cap_stat_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_hap_stat_norm: { 'dim': [ 1, ], 'dtype': float }
  #    tce_cap_hap_stat_diff_norm: {'dim': [1,], 'dtype': float}
  #  tce_rb_tcount0n_norm: { 'dim': [ 1, ], 'dtype': float }
  #    tce_rb_tcount0_norm: { 'dim': [1,], 'dtype': float}
  # stellar parameters
  tce_sdens_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_steff_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_smet_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_slogg_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_smass_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_sradius_norm: { 'dim': [ 1, ], 'dtype': float }
  # tce parameters
  tce_prad_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_period_norm: { 'dim': [ 1, ], 'dtype': float }

# maps features' names to features names expected by the model
feature_map: null
  #  feature_name: feature_name_model
#  global_centr_view_adjscl_std_noclip: global_centr_view_std_noclip
#  local_centr_view_adjscl_std_noclip: local_centr_view_std_noclip
#  tce_dikco_adjscl_msky_norm: tce_dikco_msky_norm
#  tce_dikco_adjscl_msky_err_norm: tce_dikco_msky_err_norm
#  tce_dikco_adjscl_msky_err_norm: tce_dikco_msky_err_norm
#  tce_ruwe_norm: ruwe_norm
evaluation:
  batch_size: 32
#  filter_data: null

callbacks:
  tensorboard:
    histogram_freq: 1
    write_graph: true
    write_images: false
    update_freq: epoch
    profile_batch: 2
    embeddings_metadata: null
    embeddings_freq: 0

label_map: # maps label to a label id
#  # Kepler
#  PC: 1
#  AFP: 0
#  AFP2: 1
#  NTP: 0
#  # TESS
#  KP: 1
#  CP: 1
#  PC: 0
#  FP: 0
#  FA: 0
#  EB: 0
#  BEB: 0
#  APC: 0
#  O: 0
  # for Hongbo's/Andres data sets
  # Kepler
  K-PC: 1
  K-AFP: 0
  K-AFP2: 0
  K-NTP: 0
  # TESS
  T-KP: 1
  T-CP: 1
  T-FP: 0
  T-FA: 0
  T-EB: 0
  T-NTP: 0

#multiclass_class_labels:
#  2: 'PC'
#  1: 'AFP'
#  0: 'NTP'

metrics:
  'clf_thr': 0.5  # classification threshold
  'num_thr': 1000  # number of thresholds used to compute some metrics
  'top_k_arr': # values of k for computing precision-at-k
    'train': [ 100, 1000, 1818 ]
    'val': [ 50, 150, 222 ]
    'test': [ 50, 150, 251 ]
  top_k_curve: # values of k for computing precision-at-k curve
    train: { 'start': 25, 'stop': 1800, 'num': 100,  'endpoint': true, 'dtype': 'int' }
    val: { 'start': 25, 'stop': 200, 'num': 10,  'endpoint': true, 'dtype': 'int' }
    test: { 'start': 25, 'stop': 250, 'num': 10,  'endpoint': true, 'dtype': 'int' }

# datasets in which the ensemble is run - same name convention as used for the TFRecords
datasets:
  - train
  - val
  - test
#  - predict
verbose: true
