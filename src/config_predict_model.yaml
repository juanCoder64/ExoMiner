ngpus_per_node: 1  # 4  # number of GPUs per node; each GPU is used to run a model iteration
rank: null
# set to true to run multiple models in parallel (one per GPU); only useful when number of GPUs > 1
predict_parallel: false
rnd_seed: 2  # random seed used to select the validation fold in each CV iteration
paths:
  # experiment directory; results are saved here
  experiment_dir: /Users/msaragoc/Projects/exoplanet_transit_classification/experiments/kepler_simulated_data_exominer/exominer_trained_simdata_predict_realdata_11-3-2023_1341
  # TFRecord directory with the CV folds
  tfrec_dir: /Users/msaragoc/Projects/exoplanet_transit_classification/data/tfrecords/kepler/tfrecordskeplerq1q17dr25-dv_g301-l31_5tr_spline_nongapped_all_features_phases_7-20-2022_1237_data/tfrecordskeplerq1q17dr25-dv_g301-l31_5tr_spline_nongapped_all_features_phases_7-20-2022_1237_updated_stellar_ruwe_confirmedkois_adddiffimg_perimg_normdiffimg_dataset_split-normalized_by_simdata
  # list of models' file paths to be evaluated and used to run inference
  models_filepaths:
    - /Users/msaragoc/Projects/exoplanet_transit_classification/experiments/kepler_simulated_data_exominer/exominer_train_kepler_simulateddata_for_simulateddata_11-2-2023_1547/ensemble_avg_model.keras

generate_csv_pred: true  # generates a prediction ranking for each of the specified datasets

config:
  multi_class: false
  use_transformer: false

data_fields: # scalar data from TFRecords to add to ranking table
  uid: 'string'
  target_id: 'int_scalar'
  tce_plnt_num: 'int_scalar'
  #  'oi': 'float_scalar'
  label: 'string'
#  label_id: 'int_scalar'
#  odd_even_flag: 'string'
#  sec_flag: 'string'
#  centroid_flag: 'string'
#  not_transit_like_flag: 'string'
  #  'TESS Disposition': 'string'
  tce_period: 'float_scalar'
  tce_duration: 'float_scalar'
  tce_time0bk: 'float_scalar'
#  'transit_depth': 'float_scalar'
#  tce_depth: 'float_scalar'
  ruwe: 'float_scalar'
  tce_prad: 'float_scalar'
  tce_max_mult_ev: 'float_scalar'
#  'sigma_oot_odd': 'float_scalar'
#  'sigma_it_odd': 'float_scalar'
#  'sigma_oot_even': 'float_scalar'
#  'sigma_it_even': 'float_scalar'

features_set: # each key-value pair is feature_name: {'dim': feature_dim, 'dtype': feature_dtype}

  # unfolded flux
#  unfolded_local_flux_view_fluxnorm: { 'dim': [ 20, 31 ], 'dtype': float }
  #  unfolded_global_flux_view_fluxnorm: { 'dim': [ 20, 301 ], 'dtype': float }

  # flux
  global_flux_view_fluxnorm: { 'dim': [ 301, 1 ], 'dtype': float }
  local_flux_view_fluxnorm: { 'dim': [ 31, 1 ], 'dtype': float }
  local_flux_view_fluxnorm_var: { 'dim': [ 31, 1 ], 'dtype': float }
#  transit_depth_norm: { 'dim': [ 1, ], 'dtype': float }
#  tce_depth_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_max_mult_ev_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_max_sngle_ev_norm: { 'dim': [ 1, ], 'dtype': float }
#  tce_robstat_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_model_chisq_norm: { 'dim': [ 1, ], 'dtype': float }

  # odd-even flux related features
  local_flux_odd_view_fluxnorm: { 'dim': [ 31, 1 ], 'dtype': float }
  local_flux_even_view_fluxnorm: { 'dim': [ 31, 1 ], 'dtype': float }
  local_flux_odd_view_fluxnorm_var: { 'dim': [ 31, 1 ], 'dtype': float }
  local_flux_even_view_fluxnorm_var: { 'dim': [ 31, 1 ], 'dtype': float }
  #  tce_bin_oedp_stat_norm: {'dim': [1,], 'dtype': float}
#    odd_std_oot_bin_norm: {'dim': [1,], 'dtype': float}
#    even_std_oot_bin_norm: {'dim': [1,], 'dtype': float}
#  odd_se_oot_norm: { 'dim': [ 1, ], 'dtype': float }
#  even_se_oot_norm: { 'dim': [ 1, ], 'dtype': float }

  # centroid related features
  # global_centr_fdl_view_norm: {'dim': [301, 1], 'dtype': float}
  # local_centr_fdl_view_norm: {'dim': [31, 1], 'dtype': float}
#  global_centr_view_std_noclip: { 'dim': [ 301, 1 ], 'dtype': float }
  local_centr_view_std_noclip: { 'dim': [ 31, 1 ], 'dtype': float }
#  global_centr_view_adjscl_std_noclip: { 'dim': [ 301, 1 ], 'dtype': float }
#  local_centr_view_adjscl_std_noclip: { 'dim': [ 31, 1 ], 'dtype': float }
  tce_fwm_stat_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_dicco_msky_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_dicco_msky_err_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_dikco_msky_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_dikco_msky_err_norm: { 'dim': [ 1, ], 'dtype': float }
#  tce_dikco_msky_adjscl_norm: { 'dim': [ 1, ], 'dtype': float }
#  tce_dikco_msky_err_adjscl_shifted_norm: { 'dim': [ 1, ], 'dtype': float }
  #  mag_norm: { 'dim': [ 1, ], 'dtype': float }
#  mag_cat: { 'dim': [ 1, ], 'dtype': int }
  mag_cat_norm: { 'dim': [ 1, ], 'dtype': float }
  ruwe_norm: { 'dim': [ 1, ], 'dtype': float }
#  tce_ruwe_norm: { 'dim': [ 1, ], 'dtype': float }

  # secondary related features
  # local_weak_secondary_view_fluxnorm: {'dim': [31, 1], 'dtype': float}
  local_weak_secondary_view_selfnorm: { 'dim': [ 31, 1 ], 'dtype': float }
  local_weak_secondary_view_selfnorm_var: { 'dim': [ 31, 1 ], 'dtype': float }
#  local_weak_secondary_view_max_flux-wks_norm: { 'dim': [ 31, 1 ], 'dtype': float }
  tce_maxmes_norm: { 'dim': [ 1, ], 'dtype': float }
#  wst_depth_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_albedo_stat_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_ptemp_stat_norm: { 'dim': [ 1, ], 'dtype': float }

  # other diagnostic parameters

  # bootstrap fa prob
  boot_fap_norm: { 'dim': [ 1, ], 'dtype': float }

  # ghost
  tce_cap_stat_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_hap_stat_norm: { 'dim': [ 1, ], 'dtype': float }
  #    tce_cap_hap_stat_diff_norm: {'dim': [1,], 'dtype': float}

  # rolling band
  tce_rb_tcount0n_norm: { 'dim': [ 1, ], 'dtype': float }
  #    tce_rb_tcount0_norm: { 'dim': [1,], 'dtype': float}

  # stellar parameters
  tce_sdens_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_steff_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_smet_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_slogg_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_smass_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_sradius_norm: { 'dim': [ 1, ], 'dtype': float }

  # tce parameters
  tce_prad_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_period_norm: { 'dim': [ 1, ], 'dtype': float }
#  tce_num_transits_obs: {'dim': [1, ], 'dtype': float}

  # difference image
#  diff_imgs_std_trainset: { 'dim': [ 5, 33, 33 ], 'dtype': float }
#  oot_imgs_std_trainset: { 'dim': [ 5, 33, 33 ], 'dtype': float }
#   diff_imgs_stdnorm: { 'dim': [ 5, 33, 33 ], 'dtype': float }
#   oot_imgs_stdnorm: { 'dim': [ 5, 33, 33 ], 'dtype': float }
#  target_subpx_pos: { 'dim': [ 2, 5 ], 'dtype': float }

# maps features' names to features names expected by the model
feature_map: null
#  feature_name: feature_name_model
#  global_centr_view_adjscl_std_noclip: global_centr_view_std_noclip
#  local_centr_view_adjscl_std_noclip: local_centr_view_std_noclip
#  tce_dikco_msky_adjscl_norm: tce_dikco_msky_norm
#  tce_dikco_msky_err_adjscl_shifted_norm: tce_dikco_msky_err_norm

training:
  data_augmentation: false  # perform online data augmentation
  online_preprocessing_params: # online data augmentation parameters
    'num_bins_global': 301
    'num_bins_local': 31
    'num_transit_dur': 5
  n_models: 1  # number of models in the ensemble
  n_epochs: 1  # number of epochs used to train each model
  #  use_kepler_ce: false
  opt_metric: auc_pr  # metric shown in the epoch plots besides loss for the training, validation and test sets
  batch_size: 32
  #  ce_weights: null
  filter_data: null  # deprecated; useless
  category_weights: null  # category weights used in weighted loss; set to null for non-weighted loss
#    '0': 68.5
#    '1': 0.5
  #    PC: 1.0
  #    AFP: 0.5
  #    NTP: 1.0
  # charles was using these weights
#  PC: 0.0002921
#  AFP: 0.0002229
#  NTP: 2.967e-05
#  T-NTP: 2.967e-05
#  T-EB: 0.0002229
#  T-KP: 0.0002921
#  T-FP: 0.0002229
#  T-CP: 0.0002921
#  T-FA: 0.0002229
  sample_weights: false  # use sample weights defined in the data set
  shuffle_buffer_size: 42000  # should be larger than size of the training set to allow perfect sampling

label_field_name: label  # name of the label field in the TFRecord that is going to be used as the label

evaluation:
  batch_size: 32
inference:
  batch_size: 32

callbacks:
  early_stopping:
    monitor: val_auc_pr  # val_auc_pr  # which metric used to monitor for early stopping
    min_delta: 0
    patience: 20
    verbose: 1
    mode: max  # maximize/minimize monitored metric in early stopping
    baseline: null
    restore_best_weights: true  # get model from epoch that had the best performance according to monitored metric
  tensorboard:
    histogram_freq: 1
    write_graph: true
    write_images: false
    update_freq: epoch
    profile_batch: 2
    embeddings_metadata: null
    embeddings_freq: 0

label_map:  # maps label to a label id
#  '0': 0
#  '1': 1
#  # Kepler
  PC: 1
  AFP: 0  # 2
###  AFP2: 0
  NTP: 0
#  UNK: 0
  # TESS
#  KP: 1
#  CP: 1
#  PC: 0
#  FP: 0
#  FA: 0
#  EB: 0
#  BEB: 0
#  APC: 0
#  O: 0
  # for Hongbo's/Andres data sets
  # Kepler
#  K-PC: 1
#  K-AFP: 0
#  K-AFP2: 0
#  K-NTP: 0
  # TESS
#  T-KP: 1
#  T-CP: 1
#  T-FP: 0
#  T-FA: 0
#  T-EB: 0
#  T-NTP: 0
  # Kepler Simulated
#  INJ1: 1
#  INJ2: 0
#  INJ3: 0
#  INV: 0
#  SCR1: 0
#  SCR2: 0

datasets:
  - train
  - val
  - test

plot_model: true
write_model_summary: true
verbose_model: 1  # for fit, eval, predict functions
verbose: true  # general

metrics:
  'clf_thr': 0.5  # classification threshold
  'num_thr': 1000  # number of thresholds used to compute some metrics
