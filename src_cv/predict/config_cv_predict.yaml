rank: null
rnd_seed: 2  # random seed used to select the validation fold in each CV iteration
paths:
  # experiment directory; results are saved here
  experiment_root_dir: null
  # YAML file containing a list of CV iterations, where each CV iteration is a dictionary with the TFRecord filepaths
  # for each training, validation, and test set folds combination (i.e., {'train': ['/path/to/train_shard-xxxx', ...],
  # 'val': ['/path/to/val_shard-xxxx', ...], 'test': ['/path/to/test_shard-xxxx']}
  cv_folds: null
  # path to root directory with ensemble models created in a CV experiment
  models_cv_root_dir: null

data_fields: # scalar data from TFRecords to add to ranking table
  uid: 'string'
  target_id: 'int_scalar'
  tce_plnt_num: 'int_scalar'
  label: 'string'
  tce_period: 'float_scalar'
  tce_duration: 'float_scalar'
  tce_time0bk: 'float_scalar'
  tce_depth: 'float_scalar'
  ruwe: 'float_scalar'
  tce_prad: 'float_scalar'
  tce_max_mult_ev: 'float_scalar'

config:
  # if true, will use transformer branches. Otherwise, will use convolutional branches for unfolded flux data
  use_transformer: false
  multi_class: false  # switch to multiclass classification

features_set: # each key-value pair is feature_name: {'dim': feature_dim, 'dtype': feature_dtype}

  # unfolded flux
  unfolded_local_flux_view_fluxnorm: { 'dim': [ 20, 31 ], 'dtype': float }
#  unfolded_global_flux_view_fluxnorm: { 'dim': [ 20, 301 ], 'dtype': float }
  tce_num_transits_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_num_transits_obs_norm: { 'dim': [ 1, ], 'dtype': float }

  # flux
  global_flux_view_fluxnorm: { 'dim': [ 301, 1 ], 'dtype': float }
  global_flux_view_fluxnorm_var: { 'dim': [ 301, 1 ], 'dtype': float }
  flux_global_stat_abs_min_norm: { 'dim': [ 1, ], 'dtype': float }

  local_flux_view_fluxnorm: { 'dim': [ 31, 1 ], 'dtype': float }
  local_flux_view_fluxnorm_var: { 'dim': [ 31, 1 ], 'dtype': float }
  flux_local_stat_abs_min: { 'dim': [ 1, ], 'dtype': float }
#  tce_depth_norm: { 'dim': [ 1, ], 'dtype': float }

#  # odd-even flux related features
  local_flux_odd_view_fluxnorm: { 'dim': [ 31, 1 ], 'dtype': float }
  local_flux_even_view_fluxnorm: { 'dim': [ 31, 1 ], 'dtype': float }
  local_flux_odd_view_fluxnorm_var: { 'dim': [ 31, 1 ], 'dtype': float }
  local_flux_even_view_fluxnorm_var: { 'dim': [ 31, 1 ], 'dtype': float }
  flux_even_local_stat_abs_min_norm: {'dim': [1,], 'dtype': float}
  flux_odd_local_stat_abs_min_norm: {'dim': [1,], 'dtype': float}

  # centroid related features
##  global_centr_view_std_noclip: { 'dim': [ 301, 1 ], 'dtype': float }
  local_centr_view_std_noclip: { 'dim': [ 31, 1 ], 'dtype': float }
  local_centr_view_std_noclip_var: { 'dim': [ 31, 1 ], 'dtype': float }
#  tce_fwm_stat_norm: { 'dim': [ 1, ], 'dtype': float }
#  tce_dicco_msky_norm: { 'dim': [ 1, ], 'dtype': float }
#  tce_dicco_msky_err_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_dikco_msky_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_dikco_msky_err_norm: { 'dim': [ 1, ], 'dtype': float }
#  #  mag_norm: { 'dim': [ 1, ], 'dtype': float }
##  mag_cat: { 'dim': [ 1, ], 'dtype': int }
#  mag_cat_norm: { 'dim': [ 1, ], 'dtype': float }
  ruwe_norm: { 'dim': [ 1, ], 'dtype': float }
  mag_shift_norm: { 'dim': [ 1, ], 'dtype': float }

  # secondary related features
##  # local_weak_secondary_view_fluxnorm: {'dim': [31, 1], 'dtype': float}
  local_weak_secondary_view_selfnorm: { 'dim': [ 31, 1 ], 'dtype': float }
  local_weak_secondary_view_selfnorm_var: { 'dim': [ 31, 1 ], 'dtype': float }
###  local_weak_secondary_view_max_flux-wks_norm: { 'dim': [ 31, 1 ], 'dtype': float }
  tce_maxmes_norm: { 'dim': [ 1, ], 'dtype': float }
##  wst_depth_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_albedo_stat_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_ptemp_stat_norm: { 'dim': [ 1, ], 'dtype': float }
  flux_weak_secondary_local_stat_abs_min_norm: { 'dim': [ 1, ], 'dtype': float }
#
  # other diagnostic parameters
  tce_max_mult_ev_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_max_sngle_ev_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_robstat_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_model_chisq_norm: { 'dim': [ 1, ], 'dtype': float }

 # bootstrap fa prob
  boot_fap_norm: { 'dim': [ 1, ], 'dtype': float }

 # ghost
  tce_cap_stat_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_hap_stat_norm: { 'dim': [ 1, ], 'dtype': float }
 #    tce_cap_hap_stat_diff_norm: {'dim': [1,], 'dtype': float}

  # rolling band
#  tce_rb_tcount0n_norm: { 'dim': [ 1, ], 'dtype': float }
#  #    tce_rb_tcount0_norm: { 'dim': [1,], 'dtype': float}

 # stellar parameters
  tce_sdens_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_steff_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_smet_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_slogg_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_smass_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_sradius_norm: { 'dim': [ 1, ], 'dtype': float }

 # tce parameters
  tce_prad_norm: { 'dim': [ 1, ], 'dtype': float }
  tce_period_norm: { 'dim': [ 1, ], 'dtype': float }

  # difference image
  diff_imgs_std_trainset: { 'dim': [ 33, 33, 5 ], 'dtype': float }
  oot_imgs_std_trainset: { 'dim': [ 33, 33, 5 ], 'dtype': float }
  target_imgs: { 'dim': [ 33, 33, 5 ], 'dtype': float }
  quality: { 'dim': [ 5, 1], 'dtype': float }

  # momentum dump
  local_momentum_dump_view: { 'dim': [ 31, 1 ], 'dtype': float }
  local_momentum_dump_view_var: { 'dim': [ 31, 1 ], 'dtype': float }

#   flux trend unfolded
#  flux_trend_global_unfolded_norm: { 'dim': [ 301, 1 ], 'dtype': float }
#  flux_trend_global_unfolded_norm_var: { 'dim': [ 301, 1 ], 'dtype': float }

  # flux trend
  flux_trend_global_norm: { 'dim': [ 301, 1 ], 'dtype': float }
  flux_trend_global_norm_var: { 'dim': [ 301, 1 ], 'dtype': float }
  flux_trend_global_stat_min_norm: { 'dim': [ 1, ], 'dtype': float }
  flux_trend_global_stat_max_norm: { 'dim': [ 1, ], 'dtype': float }

  # flux periodogram
  pgram_smooth_norm: { 'dim': [ 674, 1 ], 'dtype': float }
  pgram_tpm_smooth_norm: { 'dim': [ 674, 1 ], 'dtype': float }
  pgram_smooth_max_power_norm: { 'dim': [ 1, ], 'dtype': float }
  pgram_tpm_smooth_max_power_norm: { 'dim': [ 1, ], 'dtype': float }

# maps features' names to features names expected by the model
feature_map: null
#  feature_name: feature_name_model

label_field_name: label  # name of the label field in the TFRecord that is going to be used as the label

inference:
  batch_size: 32

callbacks:
#  early_stopping:
#    monitor: val_auc_pr  # val_auc_pr  # which metric used to monitor for early stopping
#    min_delta: 0
#    patience: 20
#    verbose: 1
#    mode: max  # maximize/minimize monitored metric in early stopping
#    baseline: null
#    restore_best_weights: true  # get model from epoch that had the best performance according to monitored metric
  tensorboard:
    histogram_freq: 1
    write_graph: true
    write_images: false
    update_freq: epoch
    profile_batch: 2
    embeddings_metadata: null
    embeddings_freq: 0

label_map:  # maps label to a label id
#  # Kepler
#  PC: 1
#  AFP: 0
#  NTP: 0
  # TESS
  KP: 1
  CP: 1
  FP: 0
  EB: 0
  NEB: 0
  NPC: 0
  BD: 0
  NTP: 0

datasets:
#  - predict
  - train
  - val
  - test

plot_model: true
write_model_summary: true
verbose_model: 2  # for fit, eval, predict functions
verbose: true  # general
