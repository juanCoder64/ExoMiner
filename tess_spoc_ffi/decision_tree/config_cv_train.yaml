rank: null
train_parallel: true  # set to true to run CV iterations in parallel (one per GPU); only useful when number of GPUs > 1
rnd_seed: 2  # random seed used to select the validation fold in each CV iteration
paths:
  # experiment directory; results are saved here
  experiment_root_dir: null
  # YAML file containing a list of CV iterations, where each CV iteration is a dictionary with the TFRecord filepaths
  # for each training, validation, and test set folds combination (i.e., {'train': ['/path/to/train_shard-xxxx', ...],
  # 'val': ['/path/to/val_shard-xxxx', ...], 'test': ['/path/to/test_shard-xxxx']}
#  cv_folds: /nobackupp19/msaragoc/work_dir/Kepler-TESS_exoplanet/data/tfrecords/TESS/tfrecords_tess_spoc_ffi_s36-s72_multisector_s56-s69_1-3-2025_1157_data/cv_tfrecords_tess_spoc_ffi_s36-s72_multisector_s56-s69_1-6-2025_1132/tfrecords/eval_with_2mindata_transferlearning/cv_2min_ffi_combined/cv_iterations.yaml
  cv_folds : /home6/msaragoc/work_dir/Kepler-TESS_exoplanet/experiments/tess_spoc_ffi/cv_tess-spoc-ffi_s36-s72_multisector_s56-s69_with2mindata_exominer_newarchitecture_allfeatures_globalmaxpoolingextractedfeatures_ffi_vs_2min_3-25-2025_1810/cv_iterations_csv_dataset.yaml
  # HPO run configuration directory; get configurations from an HPO run; comment to not use any
  hpo_dir: null

dataset_type: dataframe  # either 'dataframe' or 'tfrecord'

val_from_train: false  # if true, the validation fold is chosen randomly from the training split. The training split must contain more than one fold
num_val_folds: null  # assuming `val_from_train` is true, this variable sets the number of training folds used for validation

#trainable_layers_fp: null # /nobackupp19/msaragoc/work_dir/Kepler-TESS_exoplanet/codebase/tess_spoc_ffi/trainable_layers.yaml
#fine_tuning_hyperparameters_fp: null  # /nobackupp19/msaragoc/work_dir/Kepler-TESS_exoplanet/codebase/tess_spoc_ffi/fine_tuning_hyperparameters.yaml

generate_csv_pred: true  # generates a prediction ranking for each of the specified datasets

data_fields: # scalar data from TFRecords to add to ranking table
  uid: 'string'
  target_id: 'int_scalar'
  tce_plnt_num: 'int_scalar'
  label: 'string'
#  label_id: 'int_scalar'

#  odd_even_flag: 'string'
#  sec_flag: 'string'
#  centroid_flag: 'string'
#  not_transit_like_flag: 'string'

  tce_period: 'float_scalar'
  tce_duration: 'float_scalar'
  tce_time0bk: 'float_scalar'
  tce_depth: 'float_scalar'
  ruwe: 'float_scalar'
  tce_prad: 'float_scalar'
  tce_max_mult_ev: 'float_scalar'
  tce_model_snr: 'float_scalar'

#  tce_dikco_msky_rat: 'float_scalar'
#  tce_dicco_msky_rat: 'float_scalar'

  obs_type: string  # tess spoc ffi

config:

  # optimization hyperparameters ------
  #  'batch_size': 64

  # loss hyperparameters
  multi_class: false  # switch to multiclass classification

  # other hyperparameters -----

features_set: # each key-value pair is feature_name: {'dim': feature_dim, 'dtype': feature_dtype}

#  - uid
#  - target_id
#  - tce_plnt_num
#  - label
#  - tce_period
#  - tce_duration
#  - tce_time0bk
#  - tce_depth
#  - ruwe
#  - tce_prad
#  - tce_max_mult_ev
#  - tce_model_snr
  - obs_type
#  - tce_sdens
#  - tce_max_sngle_ev
#  - tce_dikco_msky_err
#  - flux_even_local_stat_abs_min
#  - flux_trend_global_stat_max
#  - boot_fap
#  - tce_slogg
#  - flux_weak_secondary_local_stat_abs_min
#  - tce_smass
#  - mag
#  - flux_local_stat_abs_min
#  - flux_global_stat_abs_min
#  - tce_albedo_stat
#  - tce_cap_stat
#  - pgram_smooth_max_power
#  - tce_hap_stat
#  - pgram_tpm_smooth_max_power
#  - tce_num_transits
#  - flux_trend_global_stat_min
#  - tce_smet
#  - tce_ptemp_stat
#  - tce_num_transits_obs
#  - tce_dikco_msky
#  - tce_model_chisq
#  - tce_sradius
#  - tce_steff
#  - tce_maxmes
#  - tce_robstat
  - flux_odd_local_stat_abs_min
  - diff_imgs_convfc_batch_norm_0
  - diff_imgs_convfc_batch_norm_1
  - diff_imgs_convfc_batch_norm_2
  - diff_imgs_convfc_batch_norm_3
  - diff_imgs_convfc_batch_norm_4
  - diff_imgs_convfc_batch_norm_5
  - diff_imgs_convfc_batch_norm_6
  - diff_imgs_convfc_batch_norm_7
  - diff_imgs_convfc_batch_norm_8
  - diff_imgs_convfc_batch_norm_9
  - diff_imgs_convfc_batch_norm_10
  - diff_imgs_convfc_batch_norm_11
  - diff_imgs_convfc_batch_norm_12
  - diff_imgs_convfc_batch_norm_13
  - diff_imgs_convfc_batch_norm_14
  - global_flux_global_max_pooling_0
  - global_flux_global_max_pooling_1
  - global_flux_global_max_pooling_2
  - global_flux_global_max_pooling_3
  - global_flux_global_max_pooling_4
  - global_flux_global_max_pooling_5
  - global_flux_global_max_pooling_6
  - global_flux_global_max_pooling_7
  - global_flux_global_max_pooling_8
  - global_flux_global_max_pooling_9
  - global_flux_global_max_pooling_10
  - global_flux_global_max_pooling_11
  - global_flux_global_max_pooling_12
  - global_flux_global_max_pooling_13
  - global_flux_global_max_pooling_14
  - global_flux_global_max_pooling_15
  - flux_trend_global_max_pooling_0
  - flux_trend_global_max_pooling_1
  - flux_trend_global_max_pooling_2
  - flux_trend_global_max_pooling_3
  - flux_trend_global_max_pooling_4
  - flux_trend_global_max_pooling_5
  - flux_trend_global_max_pooling_6
  - flux_trend_global_max_pooling_7
  - flux_trend_global_max_pooling_8
  - flux_trend_global_max_pooling_9
  - flux_trend_global_max_pooling_10
  - flux_trend_global_max_pooling_11
  - flux_trend_global_max_pooling_12
  - flux_trend_global_max_pooling_13
  - flux_trend_global_max_pooling_14
  - flux_trend_global_max_pooling_15
  - local_centroid_global_max_pooling_0
  - local_centroid_global_max_pooling_1
  - local_centroid_global_max_pooling_2
  - local_centroid_global_max_pooling_3
  - local_centroid_global_max_pooling_4
  - local_centroid_global_max_pooling_5
  - local_centroid_global_max_pooling_6
  - local_centroid_global_max_pooling_7
  - local_centroid_global_max_pooling_8
  - local_centroid_global_max_pooling_9
  - local_centroid_global_max_pooling_10
  - local_centroid_global_max_pooling_11
  - local_centroid_global_max_pooling_12
  - local_centroid_global_max_pooling_13
  - local_centroid_global_max_pooling_14
  - local_centroid_global_max_pooling_15
  - local_fluxes_local_odd_even_global_max_pooling_0
  - local_fluxes_local_odd_even_global_max_pooling_1
  - local_fluxes_local_odd_even_global_max_pooling_2
  - local_fluxes_local_odd_even_global_max_pooling_3
  - local_fluxes_local_odd_even_global_max_pooling_4
  - local_fluxes_local_odd_even_global_max_pooling_5
  - local_fluxes_local_odd_even_global_max_pooling_6
  - local_fluxes_local_odd_even_global_max_pooling_7
  - local_fluxes_local_odd_even_global_max_pooling_8
  - local_fluxes_local_odd_even_global_max_pooling_9
  - local_fluxes_local_odd_even_global_max_pooling_10
  - local_fluxes_local_odd_even_global_max_pooling_11
  - local_fluxes_local_odd_even_global_max_pooling_12
  - local_fluxes_local_odd_even_global_max_pooling_13
  - local_fluxes_local_odd_even_global_max_pooling_14
  - local_fluxes_local_odd_even_global_max_pooling_15
  - local_fluxes_local_flux_global_max_pooling_0
  - local_fluxes_local_flux_global_max_pooling_1
  - local_fluxes_local_flux_global_max_pooling_2
  - local_fluxes_local_flux_global_max_pooling_3
  - local_fluxes_local_flux_global_max_pooling_4
  - local_fluxes_local_flux_global_max_pooling_5
  - local_fluxes_local_flux_global_max_pooling_6
  - local_fluxes_local_flux_global_max_pooling_7
  - local_fluxes_local_flux_global_max_pooling_8
  - local_fluxes_local_flux_global_max_pooling_9
  - local_fluxes_local_flux_global_max_pooling_10
  - local_fluxes_local_flux_global_max_pooling_11
  - local_fluxes_local_flux_global_max_pooling_12
  - local_fluxes_local_flux_global_max_pooling_13
  - local_fluxes_local_flux_global_max_pooling_14
  - local_fluxes_local_flux_global_max_pooling_15
  - local_fluxes_local_weak_secondary_global_max_pooling_0
  - local_fluxes_local_weak_secondary_global_max_pooling_1
  - local_fluxes_local_weak_secondary_global_max_pooling_2
  - local_fluxes_local_weak_secondary_global_max_pooling_3
  - local_fluxes_local_weak_secondary_global_max_pooling_4
  - local_fluxes_local_weak_secondary_global_max_pooling_5
  - local_fluxes_local_weak_secondary_global_max_pooling_6
  - local_fluxes_local_weak_secondary_global_max_pooling_7
  - local_fluxes_local_weak_secondary_global_max_pooling_8
  - local_fluxes_local_weak_secondary_global_max_pooling_9
  - local_fluxes_local_weak_secondary_global_max_pooling_10
  - local_fluxes_local_weak_secondary_global_max_pooling_11
  - local_fluxes_local_weak_secondary_global_max_pooling_12
  - local_fluxes_local_weak_secondary_global_max_pooling_13
  - local_fluxes_local_weak_secondary_global_max_pooling_14
  - local_fluxes_local_weak_secondary_global_max_pooling_15
  - unfolded_flux_global_max_pooling_0
  - unfolded_flux_global_max_pooling_1
  - unfolded_flux_global_max_pooling_2
  - unfolded_flux_global_max_pooling_3
  - momentum_dump_global_max_pooling_0
  - momentum_dump_global_max_pooling_1
  - momentum_dump_global_max_pooling_2
  - momentum_dump_global_max_pooling_3
  - momentum_dump_global_max_pooling_4
  - momentum_dump_global_max_pooling_5
  - momentum_dump_global_max_pooling_6
  - momentum_dump_global_max_pooling_7
  - momentum_dump_global_max_pooling_8
  - momentum_dump_global_max_pooling_9
  - momentum_dump_global_max_pooling_10
  - momentum_dump_global_max_pooling_11
  - momentum_dump_global_max_pooling_12
  - momentum_dump_global_max_pooling_13
  - momentum_dump_global_max_pooling_14
  - momentum_dump_global_max_pooling_15

#  # label
##  label : { 'dim': [1, ], 'dtype': string}
#  obs_type: { 'dim': [1, ], 'dtype': string}
#
##  # unfolded flux
##  tce_num_transits: { 'dim': [ 1, ], 'dtype': int }
##  tce_num_transits_obs: { 'dim': [ 1, ], 'dtype': int }
#  tce_num_transits_norm: { 'dim': [ 1, ], 'dtype': float }
#  tce_num_transits_obs_norm: { 'dim': [ 1, ], 'dtype': float }
#
#  # flux
#  flux_global_stat_abs_min: { 'dim': [ 1, ], 'dtype': float }
#  flux_local_stat_abs_min: { 'dim': [ 1, ], 'dtype': float }
#
#  # odd-even flux related features
#  flux_even_local_stat_abs_min: {'dim': [1,], 'dtype': float}
#  flux_odd_local_stat_abs_min: {'dim': [1,], 'dtype': float}
##  tce_bin_oedp_stat: {'dim': [1,], 'dtype': float}
####    odd_std_oot_bin: {'dim': [1,], 'dtype': float}
####    even_std_oot_bin: {'dim': [1,], 'dtype': float}
####  odd_se_oot: { 'dim': [ 1, ], 'dtype': float }
####  even_se_oot: { 'dim': [ 1, ], 'dtype': float }
#
#  # centroid related features
##  tce_fwm_stat: { 'dim': [ 1, ], 'dtype': float }
#
#  # secondary related features
#  tce_maxmes: { 'dim': [ 1, ], 'dtype': float }
###  wst_depth: { 'dim': [ 1, ], 'dtype': float }
#  tce_albedo_stat: { 'dim': [ 1, ], 'dtype': float }
#  tce_ptemp_stat: { 'dim': [ 1, ], 'dtype': float }
#  flux_weak_secondary_local_stat_abs_min: { 'dim': [ 1, ], 'dtype': float }
#
#  # other diagnostic parameters
#  tce_max_mult_ev: { 'dim': [ 1, ], 'dtype': float }
#  tce_max_sngle_ev: { 'dim': [ 1, ], 'dtype': float }
#  tce_robstat: { 'dim': [ 1, ], 'dtype': float }
#  tce_model_chisq: { 'dim': [ 1, ], 'dtype': float }
#
# # bootstrap fa prob
#  boot_fap: { 'dim': [ 1, ], 'dtype': float }
#
# # ghost
#  tce_cap_stat: { 'dim': [ 1, ], 'dtype': float }
#  tce_hap_stat: { 'dim': [ 1, ], 'dtype': float }
# #    tce_cap_hap_stat_diff: {'dim': [1,], 'dtype': float}
#
#  # rolling band
##  tce_rb_tcount0n: { 'dim': [ 1, ], 'dtype': float }
#
# # stellar parameters
#  tce_sdens: { 'dim': [ 1, ], 'dtype': float }
#  tce_steff: { 'dim': [ 1, ], 'dtype': float }
#  tce_smet: { 'dim': [ 1, ], 'dtype': float }
#  tce_slogg: { 'dim': [ 1, ], 'dtype': float }
#  tce_smass: { 'dim': [ 1, ], 'dtype': float }
#  tce_sradius: { 'dim': [ 1, ], 'dtype': float }
#  mag: { 'dim': [ 1, ], 'dtype': float }
#  ruwe: { 'dim': [ 1, ], 'dtype': float }
##  mag_shift: { 'dim': [ 1, ], 'dtype': float }
#
# # tce parameters
#  tce_prad: { 'dim': [ 1, ], 'dtype': float }
#  tce_period: { 'dim': [ 1, ], 'dtype': float }
#  #  tce_depth: { 'dim': [ 1, ], 'dtype': float }
#
##  quality: { 'dim': [ 5, 1], 'dtype': float }
#  #  tce_dicco_msky: { 'dim': [ 1, ], 'dtype': float }
#  #  tce_dicco_msky_err: { 'dim': [ 1, ], 'dtype': float }
#  tce_dikco_msky: { 'dim': [ 1, ], 'dtype': float }
#  tce_dikco_msky_err: { 'dim': [ 1, ], 'dtype': float }
#  # tce_dikco_msky_rat: { 'dim': [ 1, ], 'dtype': float }
#
#  # momentum dump
#
#  # flux trend
#  flux_trend_global_stat_min: { 'dim': [ 1, ], 'dtype': float }
#  flux_trend_global_stat_max: { 'dim': [ 1, ], 'dtype': float }
#
#  # flux periodogram
#  pgram_smooth_max_power: { 'dim': [ 1, ], 'dtype': float }
#  pgram_tpm_smooth_max_power: { 'dim': [ 1, ], 'dtype': float }

# maps features' names to features names expected by the model
feature_map: null
#  feature_name: feature_name_model

#training:
#  data_augmentation: false  # perform online data augmentation
#  online_preprocessing_params: # online data augmentation parameters
#    'num_bins_global': 301
#    'num_bins_local': 31
#    'num_transit_dur': 5
#  n_epochs: 300  # number of epochs used to train each model
#  opt_metric: auc_pr  # metric shown in the epoch plots besides loss for the training, validation and test sets
#  batch_size: 32  # 128  # 32
#  category_weights: null  # category weights used in weighted loss; set to null for non-weighted loss
#  #    PC: 1.0
#  #    AFP: 0.5
#  #    NTP: 1.0
#  sample_weights: false  # use sample weights defined in the data set
#  shuffle_buffer_size: 85000  # should be larger than size of the training set to allow perfect sampling

label_field_name: obs_type  # label  # name of the label field in the TFRecord that is going to be used as the label

evaluation:
  batch_size: 1000
inference:
  batch_size: 1000

label_map:  # maps label to a label id
#  # Kepler
#  PC: 1
#  AFP: 0
#  NTP: 0
  # TESS
#  KP: 1
#  CP: 1
#  FP: 0
##  FA: 0
#  EB: 0
##  B: 0
##  J: 0
#  NTP: 0
#  NEB: 0
#  NPC: 0
#  BD: 0
  # Kepler Sim
#  INJ1: 1
#  INJ2: 0
#  INJ3: 0
#  SCR1: 0
#  SCR2: 0
#  INV: 0
  # TESS SPOC FFI vs 2-min
  2min: 0
  ffi: 1

datasets:
  - train
  - val
  - test

#plot_model: true
#write_model_summary: true
verbose_model: 2  # for fit, eval, predict functions
verbose: true  # general

#metrics:
#  'clf_thr': 0.5  # classification threshold
#  'num_thr': 1000  # number of thresholds used to compute some metrics
